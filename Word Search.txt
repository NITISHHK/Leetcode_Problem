public class Word_Search {

	    public boolean exist(char[][] board, String word) {
	        for (int i = 0; i < board.length; i++) {
	            for (int j = 0; j < board[0].length; j++) {
	                if (dfs(board, word, i, j, 0)) {
	                    return true;
	                }
	            }
	        }
	        return false;
	    }

	     private boolean dfs(char[][] board, String word, int i, int j, int k) {
	        if (i < 0 || i >= board.length || j < 0 || j >= board[0].length || board[i][j] != word.charAt(k)) {
	            return false;
	        }
	        
	        if (k == word.length() - 1) {
	            return true;
	        }
	        
	        char tmp = board[i][j];
	        board[i][j] = '/';
	        
	        boolean found = dfs(board, word, i+1, j, k+1) || dfs(board, word, i-1, j, k+1) ||
	                        dfs(board, word, i, j+1, k+1) || dfs(board, word, i, j-1, k+1);
	        
	        board[i][j] = tmp;
	        
	        return found;
	    }

	    public static void main(String[] args) {
	        
	        char[][] board = {
	            {'A', 'B', 'C', 'E'},
	            {'S', 'F', 'C', 'S'},
	            {'A', 'D', 'E', 'E'}
	        };
	        String word = "ABCCED";
	        System.out.println(true); // Output: true
	    }
	}
